// Script de diagnostic pour l'achat sp√©cifique qui cause l'erreur UUID
// Achat ID: 8e9359a4-1799-4f70-88d5-c9a4944c9d31

console.log(`
üîç DIAGNOSTIC - Achat Sp√©cifique Probl√©matique

COPIEZ ET EX√âCUTEZ CES REQU√äTES SQL DANS SUPABASE SQL EDITOR :

-- ========================================
-- 1. V√âRIFIER L'ACHAT PROBL√âMATIQUE
-- ========================================

-- V√©rifier l'√©tat de l'achat sp√©cifique
SELECT 
    id,
    store_id,
    supplier_id,
    product_id,
    quantity,
    unit_price,
    total_amount,
    created_by,
    validated_by,
    validated_quantity,
    is_validated,
    validated_at,
    created_at,
    updated_at,
    CASE 
        WHEN created_by IS NOT NULL AND EXISTS (SELECT 1 FROM users WHERE id = created_by) THEN '‚úÖ CR√âATEUR VALIDE'
        ELSE '‚ùå CR√âATEUR INVALIDE'
    END as creator_status,
    CASE 
        WHEN validated_by IS NULL THEN '‚è≥ NON VALID√â'
        WHEN validated_by = '' THEN '‚ùå UUID VIDE'
        WHEN validated_by IS NOT NULL AND EXISTS (SELECT 1 FROM users WHERE id = validated_by) THEN '‚úÖ VALIDATEUR VALIDE'
        ELSE '‚ùå VALIDATEUR INVALIDE'
    END as validator_status
FROM purchases
WHERE id = '8e9359a4-1799-4f70-88d5-c9a4944c9d31';

-- ========================================
-- 2. V√âRIFIER LES R√âF√âRENCES
-- ========================================

-- V√©rifier le cr√©ateur de l'achat
SELECT 
    u.id,
    u.auth_id,
    u.email,
    u.first_name,
    u.last_name,
    u.role,
    u.status
FROM users u
INNER JOIN purchases p ON u.id = p.created_by
WHERE p.id = '8e9359a4-1799-4f70-88d5-c9a4944c9d31';

-- V√©rifier le validateur (si existant)
SELECT 
    u.id,
    u.auth_id,
    u.email,
    u.first_name,
    u.last_name,
    u.role,
    u.status
FROM users u
INNER JOIN purchases p ON u.id = p.validated_by
WHERE p.id = '8e9359a4-1799-4f70-88d5-c9a4944c9d31';

-- ========================================
-- 3. CORRIGER L'ACHAT PROBL√âMATIQUE
-- ========================================

-- Corriger l'achat avec votre userProfile.id
UPDATE purchases 
SET 
    validated_by = '3224030f-ec32-4f54-abae-d957ef1a9ce1',  -- Votre userProfile.id
    validated_quantity = quantity,  -- Quantit√© command√©e par d√©faut
    validated_at = now(),
    is_validated = true
WHERE id = '8e9359a4-1799-4f70-88d5-c9a4944c9d31'
  AND (validated_by IS NULL OR validated_by = '' OR NOT EXISTS (SELECT 1 FROM users WHERE id = validated_by));

-- ========================================
-- 4. V√âRIFIER LA CORRECTION
-- ========================================

-- V√©rifier que l'achat est maintenant correct
SELECT 
    id,
    created_by,
    validated_by,
    validated_quantity,
    is_validated,
    validated_at,
    CASE 
        WHEN created_by IS NOT NULL AND EXISTS (SELECT 1 FROM users WHERE id = created_by) THEN '‚úÖ CR√âATEUR VALIDE'
        ELSE '‚ùå CR√âATEUR INVALIDE'
    END as creator_status,
    CASE 
        WHEN validated_by IS NOT NULL AND EXISTS (SELECT 1 FROM users WHERE id = validated_by) THEN '‚úÖ VALIDATEUR VALIDE'
        ELSE '‚ùå VALIDATEUR INVALIDE'
    END as validator_status
FROM purchases
WHERE id = '8e9359a4-1799-4f70-88d5-c9a4944c9d31';

-- ========================================
-- 5. V√âRIFIER TOUS LES ACHATS SIMILAIRES
-- ========================================

-- Identifier tous les achats avec des validated_by vides ou invalides
SELECT 
    id,
    created_by,
    validated_by,
    is_validated,
    created_at,
    CASE 
        WHEN validated_by IS NULL THEN '‚è≥ NON VALID√â'
        WHEN validated_by = '' THEN '‚ùå UUID VIDE'
        WHEN validated_by IS NOT NULL AND EXISTS (SELECT 1 FROM users WHERE id = validated_by) THEN '‚úÖ VALIDATEUR VALIDE'
        ELSE '‚ùå VALIDATEUR INVALIDE'
    END as validator_status
FROM purchases
WHERE validated_by IS NULL 
   OR validated_by = '' 
   OR NOT EXISTS (SELECT 1 FROM users WHERE id = validated_by)
ORDER BY created_at DESC;
`);

console.log(`
üìã INTERPR√âTATION DES R√âSULTATS :

1. **Achat Probl√©matique** : Doit montrer validated_by vide ou invalide
2. **R√©f√©rences** : Le cr√©ateur doit √™tre valide
3. **Correction** : L'UPDATE doit affecter 1 ligne
4. **V√©rification** : L'achat doit maintenant avoir un validateur valide
5. **Autres Achats** : Identifier s'il y a d'autres achats similaires

üîß SOLUTION :

**Si l'achat a un validated_by vide :**
1. Ex√©cutez la requ√™te UPDATE (√©tape 3)
2. V√©rifiez que la correction a fonctionn√© (√©tape 4)
3. Testez la validation dans l'application

**Si d'autres achats ont le m√™me probl√®me :**
1. Identifiez tous les achats probl√©matiques (√©tape 5)
2. Corrigez-les un par un ou en lot
3. Ou ex√©cutez la migration : 20250127000014-fix-invalid-purchases.sql

‚úÖ R√âSULTAT ATTENDU :
- Achat avec validated_by valide
- Validation d'arrivage fonctionnelle
- Aucune erreur UUID vide
`); 