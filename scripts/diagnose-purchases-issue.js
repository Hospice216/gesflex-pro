// Script de diagnostic pour les probl√®mes d'UUID dans purchases
// V√©rifie l'√©tat des utilisateurs et des achats

console.log(`
üîç DIAGNOSTIC - Probl√®mes UUID dans purchases

COPIEZ ET EX√âCUTEZ CES REQU√äTES SQL DANS SUPABASE SQL EDITOR :

-- ========================================
-- 1. V√âRIFIER L'√âTAT DE LA TABLE USERS
-- ========================================

-- V√©rifier la structure de la table users
SELECT 
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns 
WHERE table_schema = 'public' 
AND table_name = 'users'
ORDER BY ordinal_position;

-- V√©rifier les utilisateurs existants
SELECT 
    id,
    auth_id,
    email,
    first_name,
    last_name,
    role,
    status,
    created_at
FROM users
ORDER BY created_at DESC
LIMIT 10;

-- ========================================
-- 2. V√âRIFIER L'√âTAT DE LA TABLE PURCHASES
-- ========================================

-- V√©rifier la structure de la table purchases
SELECT 
    column_name,
    data_type,
    is_nullable,
    column_default
FROM information_schema.columns 
WHERE table_schema = 'public' 
AND table_name = 'purchases'
ORDER BY ordinal_position;

-- V√©rifier les achats existants
SELECT 
    id,
    store_id,
    supplier_id,
    product_id,
    quantity,
    unit_price,
    total_amount,
    created_by,
    is_validated,
    created_at
FROM purchases
ORDER BY created_at DESC
LIMIT 10;

-- ========================================
-- 3. V√âRIFIER LES RELATIONS
-- ========================================

-- V√©rifier les contraintes de cl√© √©trang√®re
SELECT 
    tc.table_name,
    kcu.column_name,
    ccu.table_name AS foreign_table_name,
    ccu.column_name AS foreign_column_name
FROM information_schema.table_constraints AS tc
JOIN information_schema.key_column_usage AS kcu
    ON tc.constraint_name = kcu.constraint_name
    AND tc.table_schema = kcu.table_schema
JOIN information_schema.constraint_column_usage AS ccu
    ON ccu.constraint_name = tc.constraint_name
    AND ccu.table_schema = tc.table_schema
WHERE tc.constraint_type = 'FOREIGN KEY'
AND tc.table_name = 'purchases';

-- ========================================
-- 4. V√âRIFIER LES PROBL√àMES POTENTIELS
-- ========================================

-- V√©rifier si des achats ont des created_by invalides
SELECT 
    p.id,
    p.created_by,
    u.id as user_id,
    u.email,
    CASE 
        WHEN u.id IS NULL THEN '‚ùå UTILISATEUR INEXISTANT'
        ELSE '‚úÖ UTILISATEUR VALIDE'
    END as status
FROM purchases p
LEFT JOIN users u ON p.created_by = u.id
ORDER BY p.created_at DESC
LIMIT 20;

-- ========================================
-- 5. V√âRIFIER L'UTILISATEUR ACTUEL
-- ========================================

-- Remplacer 'VOTRE_EMAIL' par votre email pour v√©rifier votre utilisateur
SELECT 
    id,
    auth_id,
    email,
    first_name,
    last_name,
    role,
    status
FROM users
WHERE email = 'VOTRE_EMAIL'; -- Remplacez par votre email

-- ========================================
-- 6. V√âRIFIER LES POLITIQUES RLS
-- ========================================

-- V√©rifier l'√©tat RLS
SELECT 
    schemaname,
    tablename,
    rowsecurity,
    CASE 
        WHEN rowsecurity = false THEN '‚úÖ RLS D√âSACTIV√â'
        ELSE '‚ùå RLS ACTIV√â'
    END as status
FROM pg_tables 
WHERE tablename = 'purchases';

-- V√©rifier les politiques existantes
SELECT 
    policyname,
    cmd,
    permissive,
    roles
FROM pg_policies
WHERE tablename = 'purchases';
`);

console.log(`
üìã INTERPR√âTATION DES R√âSULTATS :

1. **Structure users** : V√©rifiez que id est de type UUID
2. **Structure purchases** : V√©rifiez que created_by est de type UUID
3. **Relations** : V√©rifiez que created_by r√©f√©rence users(id)
4. **Probl√®mes** : Cherchez les "‚ùå UTILISATEUR INEXISTANT"
5. **Utilisateur actuel** : V√©rifiez que votre utilisateur existe
6. **RLS** : V√©rifiez l'√©tat des politiques

üîß SOLUTIONS :

Si vous trouvez des probl√®mes :
1. Ex√©cutez la migration : 20250127000012-fix-purchases-validation-and-rls.sql
2. V√©rifiez que PurchaseModal.tsx utilise userProfile.id
3. Testez la cr√©ation d'un nouvel achat
`); 