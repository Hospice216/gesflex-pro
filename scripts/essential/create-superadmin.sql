-- =====================================================
-- CR√âATION D'UN SUPERADMIN
-- Cr√©er un utilisateur SuperAdmin pour l'acc√®s complet
-- =====================================================

-- D√©but de la transaction
BEGIN;

-- 1. V√âRIFIER SI UN SUPERADMIN EXISTE D√âJ√Ä
SELECT 
    'SUPERADMIN EXISTANT' as diagnostic_type,
    COUNT(*) as superadmin_count,
    CASE 
        WHEN COUNT(*) > 0 THEN '‚úÖ SUPERADMIN EXISTE'
        ELSE '‚ùå AUCUN SUPERADMIN'
    END as status
FROM users 
WHERE role = 'SuperAdmin';

-- 2. CR√âER UN SUPERADMIN SI AUCUN N'EXISTE
DO $$
DECLARE
    superadmin_count INTEGER;
BEGIN
    -- Compter les SuperAdmin existants
    SELECT COUNT(*) INTO superadmin_count FROM users WHERE role = 'SuperAdmin';
    
    -- Cr√©er un SuperAdmin seulement s'il n'y en a pas
    IF superadmin_count = 0 THEN
        INSERT INTO users (
            email,
            first_name,
            last_name,
            role,
            status,
            created_at,
            updated_at
        ) VALUES (
            'superadmin@gesflex.com',
            'Super',
            'Administrateur',
            'SuperAdmin',
            'active',
            NOW(),
            NOW()
        );
        
        RAISE NOTICE 'SuperAdmin cr√©√© avec succ√®s';
    ELSE
        RAISE NOTICE 'Un SuperAdmin existe d√©j√†';
    END IF;
END $$;

-- 3. V√âRIFIER LES SUPERADMIN APR√àS CR√âATION
SELECT 
    'SUPERADMIN APR√àS CR√âATION' as diagnostic_type,
    id,
    email,
    first_name,
    last_name,
    role,
    status,
    '‚úÖ CR√â√â' as creation_status
FROM users 
WHERE role = 'SuperAdmin';

-- 4. V√âRIFIER LES PERMISSIONS
SELECT 
    'TEST PERMISSIONS' as diagnostic_type,
    'is_superadmin()' as function_name,
    CASE 
        WHEN is_superadmin() THEN '‚úÖ SUPERADMIN'
        ELSE '‚ùå PAS SUPERADMIN'
    END as status
UNION ALL
SELECT 
    'TEST PERMISSIONS' as diagnostic_type,
    'is_admin()' as function_name,
    CASE 
        WHEN is_admin() THEN '‚úÖ ADMIN'
        ELSE '‚ùå PAS ADMIN'
    END as status;

-- 5. R√âSUM√â FINAL
SELECT 
    'R√âSUM√â FINAL' as diagnostic_type,
    CASE 
        WHEN is_superadmin() THEN 'SUPERADMIN - ACC√àS COMPLET'
        WHEN is_admin() THEN 'ADMIN - PEUT CR√âER DES MAGASINS'
        ELSE 'UTILISATEUR NORMAL - ACC√àS LIMIT√â'
    END as user_permissions,
    CASE 
        WHEN is_superadmin() OR is_admin() THEN '‚úÖ PEUT CR√âER DES MAGASINS'
        ELSE '‚ùå NE PEUT PAS CR√âER DES MAGASINS'
    END as store_creation_status;

-- Validation de la transaction
COMMIT;

-- Message de fin
SELECT 'üéâ SUPERADMIN CR√â√â AVEC SUCC√àS' as result;
